# stage 1 - pick the best architecture
nohup python -u training_cross_validate.py --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/experiments/sim_box/val.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/01_train_conv --model-type conv --epochs 100 > nohup.out &
nohup python -u training_cross_validate.py --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/experiments/sim_box/val.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/01_train_lstm_conv --model-type conv_lstm --epochs 100 > nohup.out &
nohup python -u training_cross_validate.py --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/experiments/sim_box/val.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/01_train_bilstm_conv --model-type conv_bilstm --epochs 100 > nohup.out &

# stage 2 - verify that the ConvBiLstm can be effectively used fof different shapes of squeezed objects
nohup python -u training_cross_validate.py --data-path-train data/experiments/sim_all/train.pickle --data-path-test data/experiments/sim_all/softball_testing.pickle data/experiments/sim_all/softbox_testing.pickle data/experiments/sim_all/softcylinder_testing.pickle --results data/logs/02_train_conv_bilstm_all_shapes --model-type conv_bilstm --epochs 100 > nohup.out &

# stage 3 - check how much real data you need in order to ensure reliable performance on real data
nohup python -u training_cross_validate.py --add-validation-to-train --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/experiments/sim_box/val.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/03_train_sim_test_real_with_noise --model-type conv_bilstm --epochs --add-noise 100  > nohup1.out &&
nohup python -u training_cross_validate.py --add-validation-to-train --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/dataset/40_10_60/real_dataset_train_050.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/03_train_sim_test_real_add_noise_050_real --model-type conv_bilstm --epochs 100 --add-validation-to-train > nohup1.out &&
nohup python -u training_cross_validate.py --add-validation-to-train --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/dataset/40_10_60/real_dataset_train_100.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/03_train_sim_test_real_add_noise_100_real --model-type conv_bilstm --epochs 100 --add-validation-to-train > nohup2.out &&
nohup python -u training_cross_validate.py --add-validation-to-train --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/dataset/40_10_60/real_dataset_train_150.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/03_train_sim_test_real_add_noise_150_real --model-type conv_bilstm --epochs 100 --add-validation-to-train > nohup3.out &&
nohup python -u training_cross_validate.py --add-validation-to-train --data-path-train data/experiments/sim_box/train.pickle --data-path-validation data/dataset/40_10_60/real_dataset_train_200.pickle --data-path-test data/experiments/real_200_300/test.pickle --results data/logs/03_train_sim_test_real_add_noise_200_real --model-type conv_bilstm --epochs 100 --add-validation-to-train > nohup4.out &&
